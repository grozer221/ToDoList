@using ToDoList.Business.Enums
@using ToDoList.Business.Models
@using ToDoList.ViewModels.Categories
@model IEnumerable<CategoriesIndexViewModel>

@{
    ViewData["Title"] = "Categories";
    string? like = ViewContext.HttpContext.Request.Query["like"];
    string sortOrder = ViewContext.HttpContext.Request.Query["sortOrder"];
    if (string.IsNullOrEmpty(sortOrder))
        sortOrder = ToDosSortOrder.DeadlineAcs.ToString();
}

<h1>Categories</h1>

<div class="row mb-2">
    <div class="col-2">
        <a asp-action="Create" class="btn btn-info">Create</a>
    </div>
    <div class="col-10">
        <form method="get">
            <div class="row">
                <div class="col-7">
                    <input id="like" name="like" class="form-control" placeholder="Search" value=@like>
                </div>
                <div class="col-4">
                    <select name="sortOrder" id="sortOrder" class="form-control">
                        @foreach (var sortOrderName in Enum.GetNames(typeof(CategoriesSortOrder)))
                        {
                            <option selected=@((bool)(sortOrder == sortOrderName)) value="@sortOrderName">@sortOrderName.SplitCamelCase()</option>
                        }
                    </select>
                </div>
                <div class="col-1">
                    <button type="submit" class="btn btn-primary">Search</button>
                </div>
            </div>
        </form>
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(category => category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(category => category.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(category => category.UpdatedAt)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var category in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => category.CreatedAt)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => category.UpdatedAt)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@category.Id" class="btn btn-outline-primary">Details</a>
                    <a asp-action="Edit" asp-route-id="@category.Id" class="btn btn-dark">Edit</a>
                    <a asp-action="Delete" asp-route-id="@category.Id" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}